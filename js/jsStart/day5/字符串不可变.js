// 基础变量的值是存储在栈中，而引用变量存储在栈中的是指向堆中的数组或者对象的地址，
//这就是为何修改引用类型总会影响到其他指向这个地址的引用变量。
// 值类型：Number、string、bollean、undefined
var a = 100
var b = a
a = 200
console.log(b) // 100 保存与复制的是值本身


// 引用类型：对象、数组、函数、null(空指针)
// 可以扩展属性
var a1 = {age:20}
var b1 = a1
b1.age = 21 
console.log(a1.age) // 21 



// 2.字符串的不可变
// 指的是里面的值不可变，虽然看上去可以改变内容，但其实是地址变了，内存中新开辟了一个内存空间
var str = 'abc'
str = 'hello'
// 当重新给str赋值的时候，常量 'abc'不会被修改，依然在内存中
// 重新给字符串赋值，会重新在内存中开辟空间，这个特点就是字符串的不可变
// 由于字符串的不可变，在大量拼接字符串的时候会有效率问题